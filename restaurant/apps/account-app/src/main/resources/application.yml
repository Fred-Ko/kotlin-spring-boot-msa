spring:
  application:
    name: account-service
  profiles:
    active: dev
  flyway:
    enabled: false
  datasource:
    url: jdbc:h2:mem:accountdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: test
    password: test
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: false
  h2:
    console:
      enabled: true
      password: test
      path: /h2-console
  kafka:
    bootstrap-servers: localhost:9092
    admin:
      auto-create: true
      fail-fast: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        acks: all
    consumer:
      group-id: account-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest

server:
  port: 8091

# SpringDoc 설정 - 간단하고 안정적인 설정
springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    enabled: true
    path: /v3/api-docs
  packages-to-scan:
    - com.restaurant.account.presentation
    - com.restaurant.common.presentation

app:
  problem:
    base-url: https://test-api.restaurant.com/probs

# Outbox Polling configuration (Enabled for testing)
outbox:
  polling:
    enabled: true
    fixed-delay: 5000 # Poll every 5 seconds (reduced frequency)
    batch-size: 10

# Logging 설정
logging:
  level:
    com.restaurant: INFO
    org.hibernate.SQL: INFO
    org.springdoc: INFO
    io.swagger: INFO
# --- Staging/Production Profile (별도 파일 또는 외부 설정 관리) ---
# 민감 정보(DB 비밀번호, API 키 등)는 환경 변수 또는 Secret Manager 사용
# 예시:
# spring.datasource.password: ${DB_PASSWORD}
# spring.kafka.properties.schema.registry.url: ${SCHEMA_REGISTRY_URL}
