---
description: 
globs: 
alwaysApply: true
---
### 참고 조건

계좌(Account) 도메인은 User에 연동된다. 따로 생성 수정 삭제 UI는 없고 User의 생명주기에 따른다.

---

## 핵심 유즈케이스

### 1. 사용자(User) 도메인

- **회원 가입** (Command: CreateUserCommand)
  - 제안: 필수 필드(아이디, 비밀번호, 전화번호)만 포함하고, 선택 필드(이메일 등)는 생략해 간소화.
- **회원 정보 수정** (Command: UpdateUserCommand)
- **로그인/인증** (Command: AuthenticateUserCommand)
  - 제안: 간단한 토큰 기반 인증(JWT 등)만 지원하고, 소셜 로그인 등은 제외.
- **배달 주소 등록/관리** (Command: RegisterAddressCommand, UpdateAddressCommand)
- **비밀번호 변경** (Command: ChangePasswordCommand)
- **회원 삭제** (Command: DeleteUserCommand)

### 2. 계좌(Account) 도메인

- **계좌 등록** (Command: RegisterAccountCommand)
  - 제안: User 생성 시 기본 계좌 자동 생성으로 간소화 가능.
- **계좌 삭제** (Command: DeleteAccountCommand)
  - 제안: User 삭제 시 연동된 계좌 자동 삭제로 UI 생략 조건 준수.

### 3. 레스토랑(Restaurant) 도메인

- **레스토랑 목록 조회** (Query: FindRestaurantsQuery)
- **레스토랑 상세 조회** (Query: GetRestaurantDetailQuery)
- **메뉴 조회** (Query: GetMenuItemsQuery)
- **메뉴 추가** (Command: AddMenuItemCommand)
  - 제안: 관리자 권한 없이 테스트용으로 사용자도 추가 가능하도록 설정.
- **메뉴 삭제** (Command: DeleteMenuItemCommand)
- **메뉴 수정** (Command: UpdateMenuItemCommand)

### 4. 주문(Order) 도메인 - Saga 패턴 적용

- **장바구니 생성/관리** (Command: CreateCartCommand, UpdateCartCommand)
  - 제안: 장바구니는 사용자별 1개로 고정해 복잡도 감소.
- **주문 생성** (Command: PlaceOrderCommand)
  - Saga 트랜잭션: 주문 생성 → 계좌 잔액 확인 → 결제 처리 → 계좌 금액 차감 → 레스토랑 주문 접수 → 주문 확정
  - 제안: 실패 시 롤백을 위한 보상 트랜잭션 명시 (예: 결제 실패 시 주문 자동 취소).
- **주문 취소** (Command: CancelOrderCommand)
  - 보상 트랜잭션: 주문 취소 → 결제 취소 → 계좌 금액 환불 → 레스토랑 주문 취소 알림
- **주문 상태 업데이트** (Command: UpdateOrderStatusCommand)
- **주문 상태 조회** (Query: GetOrderStatusQuery)
- **주문 내역 조회** (Query: FindOrdersQuery)
  - 제안: 최근 10개 주문만 조회 가능하도록 제한.

### 5. 결제(Payment) 도메인

- **결제 처리** (Command: ProcessPaymentCommand)
- **계좌 결제 처리** (Command: ProcessAccountPaymentCommand)
  - 제안: 계좌 잔액 부족 시 실패 응답만 반환하고, 외부 결제 게이트웨이는 생략.
- **결제 취소** (Command: CancelPaymentCommand)
- **계좌 결제 취소** (Command: CancelAccountPaymentCommand)
- **결제 내역 조회** (Query: FindPaymentHistoryQuery)
  - 제안: 주문과 결제 내역을 통합 조회로 간소화 가능성 검토.

### 6. 배달(Delivery) 도메인

- **배달 상태 업데이트** (Command: UpdateDeliveryStatusCommand)
- **배달 상태 조회** (Query: GetDeliveryStatusQuery)
